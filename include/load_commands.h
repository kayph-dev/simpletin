#ifndef __SIMPLETIN_LOAD_COMMANDS_H__
#define __SIMPLETIN_LOAD_COMMANDS_H__

add_command(c_commands, "all", (t_command)all_command);
add_command(c_commands, "session", (t_command)session_command);
add_command(c_commands, "sslsession", (t_command)sslsession_command);
add_command(c_commands, "read", (t_command)read_command);
add_command(c_commands, "run", (t_command)run_command);
add_command(c_commands, "zap", (t_command)zap_command);
add_command(commands, "verbatim", verbatim_command);
add_command(commands, "action", action_command);
add_command(commands, "alias", alias_command);
add_command(commands, "antisubstitute", antisubstitute_command);
add_command(commands, "bell", bell_command);
add_command(commands, "blank", blank_command);
add_command(commands, "char", char_command);
add_command(commands, "condump", condump_command);
add_command(commands, "bind", bind_command);
add_command(commands, "keypad", keypad_command);
add_command(commands, "ctime", ctime_command);
add_command(commands, "cr", cr_command);
add_command(commands, "delay", delay_command);
add_command(commands, "event", event_command);
add_command(commands, "deleteitems", deleteitems_command);
add_command(commands, "deathlog", deathlog_command);
add_command(commands, "echo", echo_command);
add_command(commands, "explode", explode_command);
add_command(c_commands, "foreach", (t_command)foreach_command);
add_command(c_commands, "forall", (t_command)forall_command);
add_command(commands, "firstupper", firstupper_command);
add_command(commands, "help", help_command);
add_command(commands, "highlight", highlight_command);
add_command(commands, "history", history_command);
add_command(c_commands, "if", (t_command)if_command);
add_command(commands, "else", else_command);
add_command(commands, "elif", elif_command);
add_command(commands, "finditem", finditem_command);
add_command(commands, "getitem", getitem_command);
add_command(commands, "goto", goto_command);
add_command(commands, "ignore", ignore_command);
add_command(commands, "implode", implode_command);
add_command(commands, "info", info_command);
add_command(commands, "isatom", isatom_command);
add_command(commands, "killall", killall_command);
add_command(commands, "listlength", listlength_command);
add_command(commands, "log", log_command);
add_command(commands, "loop", loop_command);
add_command(commands, "nope", nope_command);
add_command(commands, "map", map_command);
add_command(commands, "margins", margins_command);
add_command(commands, "math", math_command);
add_command(commands, "match", match_command);
add_command(commands, "mark", mark_command);
add_command(commands, "messages", messages_command);
add_command(commands, "mudcolors", mudcolors_command);
add_command(commands, "news", news_command);
add_command(commands, "path", path_command);
add_command(commands, "pathdir", pathdir_command);
add_command(commands, "presub", presub_command);
add_command(commands, "prepad", prepad_command);
add_command(commands, "promptaction", promptaction_command);
add_command(commands, "postpad", postpad_command);
add_command(commands, "random", random_command);
add_command(commands, "remark", remark_command);
add_command(commands, "removeevent", removeevent_command);
add_command(commands, "undelay", undelay_command);
add_command(commands, "unevent", unevent_command);
add_command(commands, "unpathdir", unpathdir_command);
add_command(commands, "return", return_command);
add_command(commands, "reverse", reverse_command);
add_command(commands, "route", route_command);
add_command(commands, "savepath", savepath_command);
add_command(commands, "showme", showme_command);
add_command(commands, "snoop", snoop_command);
add_command(commands, "speedwalk", speedwalk_command);
add_command(commands, "splitlist", splitlist_command);
add_command(commands, "suspend", suspend_command);
add_command(commands, "shell", shell_command);
add_command(commands, "status", status_command);
add_command(commands, "textin", textin_command);
add_command(commands, "time", time_command);
add_command(commands, "sortlist", sortlist_command);
add_command(commands, "substitute", substitute_command);
add_command(commands, "gag", gag_command);
add_command(commands, "substring", substring_command);
add_command(commands, "strlen", strlen_command);
add_command(commands, "system", system_command);
add_command(commands, "tick", tick_command);
add_command(commands, "tickoff", tickoff_command);
add_command(commands, "tickon", tickon_command);
add_command(commands, "ticksize", ticksize_command);
add_command(commands, "tolower", tolower_command);
add_command(commands, "togglesubs", togglesubs_command);
add_command(commands, "toupper", toupper_command);
add_command(commands, "unaction", unaction_command);
add_command(commands, "unalias", unalias_command);
add_command(commands, "unantisubstitute", unantisubstitute_command);
add_command(commands, "unbind", unbind_command);
add_command(commands, "unhighlight", unhighlight_command);
add_command(commands, "unsubstitute", unsubstitute_command);
add_command(commands, "ungag", ungag_command);
add_command(commands, "unpromptaction", unpromptaction_command);
add_command(commands, "unmap", unmap_command);
add_command(commands, "unroute", unroute_command);
add_command(commands, "variable", variable_command);
add_command(commands, "version", version_command);
add_command(commands, "unvariable", unvariable_command);
add_command(commands, "write", write_command);
add_command(commands, "writesession", writesession_command);
add_command(commands, "dosubstitutes", dosubstitutes_command);
add_command(commands, "dohighlights", dohighlights_command);
add_command(commands, "decolorize", decolorize_command);
add_command(commands, "atoi", atoi_command);
add_command(c_commands, "strcmp", (t_command)strcmp_command);
add_command(commands, "verbose", verbose_command);
add_command(commands, "dogoto", dogoto_command);
add_command(commands, "changeto", changeto_command);
add_command(commands, "send", send_command);
add_command(commands, "timecommands", timecommands_command);
add_command(commands, "debuglog", debuglog_command);
add_command(commands, "logtype", logtype_command);
#ifdef HAVE_REGCOMP
add_command(commands, "grep", grep_command);
#endif
add_command(commands, "retain", retain_command);
add_command(c_commands, "ifexists", (t_command)ifexists_command);
add_command(c_commands, "ifstrequal", (t_command)ifstrequal_command);
#ifdef TERM_DEBUG
add_command(commands, "termdebug", termdebug_command);
#endif
add_command(commands, "pretick", pretick_command);
add_command(commands, "show_pretick", show_pretick_command);
add_command(commands, "collate", collate_command);
add_command(commands, "expand", expand_command);
add_command(commands, "hooks", hooks_command);
add_command(commands, "unhook", unhook_command);
add_command(commands, "logcomment", logcomment_command);
add_command(commands, "gagthis", gagthis_command);
#ifdef PROFILING
add_command(commands, "profile", profile_command);
#endif
add_command(commands, "charset", charset_command);
add_command(commands, "logcharset", logcharset_command);
add_command(commands, "doactions", doactions_command);
add_command(commands, "dopromptactions", dopromptactions_command);
add_command(commands, "chr", chr_command);
add_command(commands, "ord", ord_command);
add_command(commands, "hexord", hexord_command);
add_command(commands, "localtime", localtime_command);
add_command(commands, "gmtime", gmtime_command);
add_command(commands, "ctoi", ctoi_command);
add_command(commands, "loginputformat", loginputformat_command);
add_command(commands, "initvariable", initvariable_command);

#endif /* end of include guard: __SIMPLETIN_LOAD_COMMANDS_H__ */
